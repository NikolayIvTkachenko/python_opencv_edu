# Первый запуск YOLOv11
# Теперь, когда мы познакомились с основами работы YOLOv11, давайте перейдем к практике.
# Мы будем использовать модель YOLOv11 для детекции объектов на изображении. Для этого необходимо
# выполнить несколько шагов, включая загрузку модели, обработку изображения и сохранение результатов.
#
# Colab файл для этого урока
#
# Вот пример кода:
from ultralytics import YOLO

# Загрузка модели
model = YOLO("yolo11n.pt")

# Детекция объектов на изображении
results = model("street.png", save=True)

# 1. Импорт библиотеки YOLO
from ultralytics import YOLO

# Мы импортируем класс YOLO из библиотеки ultralytics, которая позволяет работать с различными версиями моделей
# YOLO, включая YOLOv11. Этот класс является интерфейсом для загрузки модели, обработки изображений и получения
# результатов.
#
# 2. Загрузка модели
# model = YOLO("yolo11n.pt")
#
# Мы загружаем предварительно обученную модель YOLOv11. Модель хранится в файле с расширением .pt, который является
# форматом сохранения для моделей, обученных с использованием PyTorch.
# "yolo11n.pt" — это имя файла модели. Вы можете использовать другие версии модели в зависимости от требований к
# точности или скорости работы (например, "yolo11x.pt" для более тяжелой, но точной модели).
# Загрузка модели происходит автоматически через библиотеку ultralytics, и теперь модель готова к использованию.
# Также вы можете скачать файл модели самостоятельно
# 3. Детекция объектов на изображении
# results = model("street.png", save=True)
#
# В этой строке мы используем метод модели для детекции объектов на изображении. Аргументом здесь
# является имя файла изображения, которое вы хотите обработать. В данном примере используется изображение с
# именем "street.png".
# Модель будет автоматически загружать изображение и искать на нем объекты. В процессе обработки будут
# обнаружены объекты, такие как автомобили, пешеходы, дороги и другие элементы, в зависимости от того, как обучена модель.
# Параметр save=True позволяет сохранять результаты детекции в файл. Модель создаст новые изображения с
# разметкой (обводками и метками объектов), которые будут сохранены в директории runs/detect/predict, которая
# будет располагаться там, где находится скрипт.
# 4. Что получим?

#
# Результат выполнения кода results — это объект, который содержит информацию о найденных объектах, их координатах и классах.
# Также будет сохранено новое изображение с пометками (обводками) вокруг распознанных объектов, которое можно будет
# просмотреть в папке, где находится исходный файл.